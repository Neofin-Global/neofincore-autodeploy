# Use this compose file to start up the application when the project consists with 2 and
# more instances (servers) behind Load Balancer.
version: '3.8'

services:
  django:
    image: index.docker.io/phonxis/neofincore_django_master:${APPLICATION_VERSION:-latest}
    container_name: django
    restart: always
    entrypoint: ["/wait-for-it.sh","${DATABASE_ENDPOINT}","--","/start.sh"]
    volumes:
      - nginx_conf:/nginx
      - static:/staticfiles
      - media:/media
      - ./wait-for-it.sh:/wait-for-it.sh
      - locale:/project_translations/locale
    networks:
      - nginx_network
    env_file: .env

  nginx:
    image: nginx:1.27.2
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/default-multi-instance.conf:/etc/nginx/conf.d/default.conf
      - static:/static
      - media:/media
    expose:
      - 80
    ports:
      - 80:80
    depends_on:
      - django
    networks:
      - nginx_network

  celeryworker:
    # Use the same image as django service
    image: index.docker.io/phonxis/neofincore_django_master:${APPLICATION_VERSION:-latest}
    container_name: celeryworker
    restart: always
    entrypoint: ["/wait-for-it.sh","${CACHE_ENDPOINT}","--","/start_worker_main.sh"]
    volumes:
      - media:/media
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - django
    networks:
      - nginx_network
    env_file: .env

  celeryworker_low_priority:
    # Use the same image as django service
    image: index.docker.io/phonxis/neofincore_django_master:${APPLICATION_VERSION:-latest}
    container_name: celeryworker_low_priority
    restart: always
    entrypoint: ["/wait-for-it.sh","${CACHE_ENDPOINT}","--","/start_worker_lowpriority.sh"]
    volumes:
      - media:/media
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - django
    networks:
      - nginx_network
    env_file: .env

  celerybeat:
    # Use the same image as django service
    image: index.docker.io/phonxis/neofincore_django_master:${APPLICATION_VERSION:-latest}
    container_name: celerybeat
    restart: always
    entrypoint: ["/wait-for-it.sh","${CACHE_ENDPOINT}","--","/start_worker_beat.sh"]
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - django
    networks:
      - nginx_network
    env_file: .env

  flower:
    # Use the same image as django service
    image: index.docker.io/phonxis/neofincore_django_master:${APPLICATION_VERSION:-latest}
    container_name: flower
    restart: always
    entrypoint: ["/wait-for-it.sh","${CACHE_ENDPOINT}","--","/start_worker_flower.sh"]
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - django
    networks:
      - nginx_network
    env_file: .env

volumes:
  nginx_conf:
  static:
  media:
  locale:

networks:
  nginx_network:
    driver: bridge
