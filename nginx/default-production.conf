# nginx config for production instances (for instances deployed by old method)
upstream webapp {
    server django:5005;
}

upstream redash {
    server redash_server:5000;
}

server {
    listen 80;
    server_name redash.<project_domain>;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name redash.<project_domain>;

    ssl_certificate /etc/nginx/ssl/live/<project_domain>/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/<project_domain>/privkey.pem;

    gzip on;
    gzip_types *;
    gzip_proxied any;
    proxy_buffer_size 8k;

    location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_pass       http://redash;
    }
}

server {
    listen 80;
    server_name $server_addr *.<project_domain>;
    client_max_body_size 20M;

    location /static/ {
        alias /static/;
    }

    location /media/ {
        alias /media/;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name <project_domain>;

    ssl_certificate /etc/nginx/ssl/live/<project_domain>/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/<project_domain>/privkey.pem;

    client_max_body_size 20M;

    location / {
       proxy_pass http://webapp;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

       add_header X-sslservername "$ssl_server_name";
       add_header X-host "$host";
       add_header X-servername "$server_name";
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location /media/ {
        alias /media/;
    }
    location /static/ {
        alias /static/;
    }
}
